{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","text","input","setInput","inputRef","useRef","useEffect","current","focus","console","log","className","onSubmit","e","todo","preventDefault","id","Math","floor","random","type","placeholder","value","onChange","target","name","ref","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","index","isComplete","onClick","TodoList","alertOk","setTodos","test","newTodos","status","updateTodos","updatedTodo","prev","filter","App","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.88f61dc4.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\n\r\nfunction TodoForm(props) {\r\n  const [input, setInput] = useState(props.edit ? props.edit.text : '')\r\n\r\n  const inputRef = useRef(null)\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus()\r\n  })\r\n  console.log(props.edit)\r\n\r\n  const handlerSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    let todo\r\n    if (props.edit) {\r\n      todo = {\r\n        id: props.edit.id,\r\n        text: input,\r\n      }\r\n    } else {\r\n      todo = {\r\n        id: Math.floor(Math.random() * 10000),\r\n        text: input,\r\n      }\r\n    }\r\n\r\n    props.onSubmit(todo)\r\n    setInput('')\r\n  }\r\n\r\n  const habdlerChange = (e) => {\r\n    setInput(e.target.value)\r\n  }\r\n  return (\r\n    <form className='todo-form' onSubmit={handlerSubmit}>\r\n      <input\r\n        type='text'\r\n        placeholder={props.edit ? 'Actualizar Tarea' : 'Agregar una Tarea'}\r\n        value={input}\r\n        onChange={habdlerChange}\r\n        name='text'\r\n        className='todo-input'\r\n        ref={inputRef}\r\n      />\r\n      <button className='todo-button'>\r\n        {props.edit ? 'Actualizar Tarea' : 'Agregar una Tarea'}\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default TodoForm\r\n","import React, { useState } from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport { RiCloseCircleLine } from 'react-icons/ri'\r\nimport { TiEdit } from 'react-icons/ti'\r\n\r\nfunction Todo({ todos, completeTodo, removeTodo, updateTodo }) {\r\n  const [edit, setEdit] = useState({\r\n    id: null,\r\n    text: '',\r\n  })\r\n\r\n  const submitUpdate = (value) => {\r\n    updateTodo({ id: value.id, text: value.text })\r\n    setEdit({\r\n      id: null,\r\n      text: '',\r\n    })\r\n  }\r\n\r\n  if (edit.id) {\r\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n  } else {\r\n    return todos.map((todo, index) => (\r\n      <div\r\n        className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\r\n        key={index}\r\n      >\r\n        <div\r\n          key={todo.id}\r\n          className='todo-text'\r\n          onClick={() => completeTodo(todo.id)}\r\n        >\r\n          {todo.text}\r\n        </div>\r\n        <div className='icons'>\r\n          <RiCloseCircleLine\r\n            onClick={() => removeTodo(todo.id)}\r\n            className='delete-icon'\r\n          />\r\n          <TiEdit\r\n            onClick={() => setEdit({ id: todo.id, text: todo.text })}\r\n            className='edit-icon'\r\n          />\r\n        </div>\r\n      </div>\r\n    ))\r\n  }\r\n}\r\n\r\nexport default Todo\r\n","import React, { useState } from 'react'\r\nimport Todo from './Todo'\r\nimport TodoForm from './TodoForm'\r\n\r\nfunction TodoList({ alertOk }) {\r\n  const [todos, setTodos] = useState([])\r\n\r\n  const addTodo = (todo) => {\r\n    if (!todo.text || /^\\s*$/.test(todo.text)) return\r\n\r\n    const newTodos = [todo, ...todos]\r\n    setTodos(newTodos)\r\n    alertOk('üöÄ Nueva Tarea Guardada!')\r\n  }\r\n\r\n  const updateTodo = (updatedTodo) => {\r\n    if (!updatedTodo.text || /^\\s*$/.test(updatedTodo.text)) return\r\n\r\n    setTodos((prev) =>\r\n      prev.map((todo) => (todo.id === updatedTodo.id ? updatedTodo : todo))\r\n    )\r\n    alertOk('üëå Tarea actualizada!')\r\n  }\r\n\r\n  const removeTodo = (id) => {\r\n    const updateTodos = todos.filter((todo) => todo.id !== id)\r\n    setTodos(updateTodos)\r\n    alertOk('üò≤ Tarea Eliminada!')\r\n  }\r\n  const completeTodo = (id) => {\r\n    let status\r\n    const updateTodos = todos.map((todo) => {\r\n      if (todo.id === id) {\r\n        status = !todo.isComplete\r\n        todo.isComplete = !todo.isComplete\r\n      }\r\n      return todo\r\n    })\r\n\r\n    setTodos(updateTodos)\r\n    if (status) {\r\n      alertOk('‚ù§Ô∏è Tarea Completa!')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Qu√© haras hoy?</h1>\r\n      <TodoForm onSubmit={addTodo} />\r\n      <Todo\r\n        todos={todos}\r\n        completeTodo={completeTodo}\r\n        updateTodo={updateTodo}\r\n        removeTodo={removeTodo}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoList\r\n","import './App.css'\r\nimport TodoList from './components/TodoList'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nfunction App() {\r\n  const notifyOk = (text) => {\r\n    toast.success(text, {\r\n      position: 'top-right',\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className='todo-app'>\r\n      <TodoList alertOk={notifyOk} />\r\n      <ToastContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}